version: "3.8"

services:
  postgres:
    image: postgres:18-alpine
    container_name: pos_db
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pos-network

  backend:
    image: pos_backend
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile.dev
    container_name: pos_backend
    env_file:
      - .env
    volumes:
      - ./apps/backend:/app
      - backend_node_modules:/app/node_modules
    depends_on:
      - postgres
    networks:
      - pos-network
    command: npm run start:dev

  frontend:
    image: pos_frontend
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile.dev
    container_name: pos_frontend
    env_file:
      - .env
    volumes:
      - ./apps/frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    networks:
      - pos-network
    command: npm run dev

  nginx:
    image: nginx:alpine
    container_name: pos_nginx
    ports:
      - "443:443"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - pos-network

volumes:
  postgres_data:
  backend_node_modules:
  frontend_node_modules:

networks:
  pos-network:
    driver: bridge
